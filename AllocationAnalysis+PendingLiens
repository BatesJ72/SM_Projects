USE [S3Reporting]
GO
/****** Object:  StoredProcedure [dbo].[JB_AllocationAnalysis_PendingLiens]    Script Date: 7/13/2020 3:23:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





-- =============================================
-- Author:		<JB>
-- Create date: <12-12-19>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[JB_AllocationAnalysis_PendingLiens]
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

--1. (Allocation Analysis - Original) Create temp table with all settlement amount date changes and Client Ids
	--drop table #AllData


select	sub2.*
into #AllData
from (
		select sub.*, ROW_NUMBER () OVER (PARTITION BY ClientId ORDER BY ChangeDate desc) as RowNumber
		from	(
				select T.*, 
						case
							when T.CurrentSA is null or T.CurrentSA = '' then 72 
							else min(C.ChangeDate) 
							end as ChangeDate
				from (
						select 	CFT.CaseId, C.Name as CaseName, C.Tort, C.SettlementFundingDate, FPV.CaseUserDisplayName, CFT.ClientId, CFT.SettlementAmount,
								Clients.SettlementAmount as CurrentSA
						from	clientsfacttable as CFT
									LEFT OUTER JOIN Cases as C on CFT.CaseId=C.Id
									LEFT OUTER JOIN FullProductViews as FPV on FPV.ClientId=CFT.ClientId
									LEFT OUTER JOIN Clients on Clients.Id=CFT.ClientId 
						where	C.Name not like '%hold%' and c.name not like '%closed%' and c.IsMT = 1
								and FPV.CaseUserDisplayName not like 'Global' and FPV.CaseUserDisplayName not like 'Complete' 
								and FPV.CaseUserDisplayName not like 'Inactive' and FPV.CaseUserDisplayName not like 'ClearMeasure Admin'
								and (Clients.FinalizedStatusId is null or Clients.FinalizedStatusId = 1)
								and Clients.SettlementAmount is not null and Clients.SettlementAmount <> ''
						group by	CFT.CaseId, C.Name, FPV.CaseUserDisplayName, CFT.ClientId, CFT.SettlementAmount, C.Tort, C.SettlementFundingDate, 
									Clients.SettlementAmount
						) as T
				
					LEFT OUTER JOIN ClientsFactTable as C on C.ClientId =T.ClientId and C.SettlementAmount=T.SettlementAmount
		
				group by T.CaseId, T.CaseName, T.CaseUserDisplayName, T.ClientId, T.SettlementAmount, T.Tort, T.SettlementFundingDate, T.CurrentSA
				) as sub
			) as sub2
where sub2.RowNumber = 1 



--2. (Allocation Analysis - Original) Determine if the change date was more than 6 months ago, 3-6 months, less than 3 months, or null
	--drop table #AllocationAnalysis


select	sub.*, 
			case 
				when sub.Months_Since_SA_Updated = 72 then 'Not Allocated'
				when sub.Months_Since_SA_Updated < 3 then 'Fewer than 3 months ago'
				when sub.Months_Since_SA_Updated > 6 then 'More than 6 months ago'
				when sub.Months_Since_SA_Updated >= 3 and sub.Months_Since_SA_Updated <= 6 then '3 to 6 months ago'
				else 'Look Into'
				end as [Time_Since_SA]
into	#AllocationAnalysis
from (
		select	*, 
				case
					when changedate = 72 then 72
					else DATEDIFF(month, ChangeDate, GETDATE()) 
					end as Months_Since_SA_Updated
		from	#AllData
	) as sub



--3. (Pending Liens Pivot) Create a temp table that has all the pending lien pivot data
	--drop table #PendingPivot

select	Main2.ClientId, Main2.Pending
into	#PendingPivot
from	(
		select	* 
		from	(
				select	sub.ClientId, sub.LienId, sub.Stage_Summary
				from	(
						select	FPV.CaseName, FPV.CaseId,
								FPV.ClientId, FPV.ClientSettlementAmount,
								Case
									When FPV.ClientSettlementAmount is null or FPV.ClientSettlementAmount = '' then 'Unallocated'
									Else 'Allocated'
									End as [Allocated_Summary],
								FPV.Id as LienId, FPV.LienType, FPV.StatusName,FPV.StatusId, FPV.Stage, FPV.ClosedReason, 
								Case
									When FPV.Stage not like 'Final%' and FPV.Stage not like 'Closed' and (FPV.StatusId is null or FPV.StatusId <> 2) then 'Pending'
									Else 'Final'
									End as [Stage_Summary]

						from	fullproductviews as FPV
									LEFT OUTER JOIN Clients on Clients.Id = FPV.ClientId
									LEFT OUTER JOIN Cases as C on C.Id = FPV.CaseId

						where	C.Name not like '%hold%' and c.name not like '%closed%' and c.IsMT = 1
								and FPV.CaseUserDisplayName not like 'Global' and FPV.CaseUserDisplayName not like 'Complete' 
								and FPV.CaseUserDisplayName not like 'Inactive' and FPV.CaseUserDisplayName not like 'ClearMeasure Admin'
								and (Clients.FinalizedStatusId is null or Clients.FinalizedStatusId = 1)
								and Clients.SettlementAmount is not null and Clients.SettlementAmount <> ''
						) as sub
				where sub.Allocated_Summary = 'Allocated'
				) as Main
		pivot (count(LienId) for Stage_Summary in ([Final], [Pending])) as Pivot1
	 ) as Main2
	
	


--4. Combine the Allocation Analysis data and the Pending Lien Pivot Data

select A.*, P.Pending
from	#AllocationAnalysis as A
			LEFT OUTER JOIN #PendingPivot as P on P.ClientId=A.ClientId



END

