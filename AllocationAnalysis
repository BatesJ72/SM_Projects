USE [S3Reporting]
GO
/****** Object:  StoredProcedure [dbo].[JB_AllocationAnalysis]    Script Date: 7/8/2020 9:49:46 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		<JB>
-- Create date: <12-12-19>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[JB_AllocationAnalysis]
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

--1. Create temp table with all settlement amount date changes and Client Ids
--drop table #AllData


select	sub2.*
into #AllData
from (
		select sub.*, ROW_NUMBER () OVER (PARTITION BY ClientId ORDER BY ChangeDate desc) as RowNumber
		from	(
				select T.*, 
						case
							when T.CurrentSA is null or T.CurrentSA = '' then 72 
							else min(C.ChangeDate) 
							end as ChangeDate
				from (
						select 	CFT.CaseId, C.Name as CaseName, C.Tort, C.SettlementFundingDate, FPV.CaseUserDisplayName, CFT.ClientId, CFT.SettlementAmount,
								Clients.SettlementAmount as CurrentSA
						from	clientsfacttable as CFT
									LEFT OUTER JOIN Cases as C on CFT.CaseId=C.Id
									LEFT OUTER JOIN FullProductViews as FPV on FPV.ClientId=CFT.ClientId
									LEFT OUTER JOIN Clients on Clients.Id=CFT.ClientId 
						where	C.Name not like '%hold%' and c.name not like '%closed%' and c.IsMT = 1
								and FPV.CaseUserDisplayName not like 'Global' and FPV.CaseUserDisplayName not like 'Complete' 
								and FPV.CaseUserDisplayName not like 'Inactive' and FPV.CaseUserDisplayName not like 'ClearMeasure Admin'
								and (Clients.FinalizedStatusId is null or Clients.FinalizedStatusId = 1)
						group by	CFT.CaseId, C.Name, FPV.CaseUserDisplayName, CFT.ClientId, CFT.SettlementAmount, C.Tort, C.SettlementFundingDate, 
									Clients.SettlementAmount
						) as T
				
					LEFT OUTER JOIN ClientsFactTable as C on C.ClientId =T.ClientId and C.SettlementAmount=T.SettlementAmount
		
				group by T.CaseId, T.CaseName, T.CaseUserDisplayName, T.ClientId, T.SettlementAmount, T.Tort, T.SettlementFundingDate, T.CurrentSA
				) as sub
			) as sub2
where sub2.RowNumber = 1 


		--select * from #AllData order by CurrentSA


--2. Get a distinct list of all CaseIds and dates the SA changed
--drop table #Case_SADates

select	distinct CaseId, CaseName, Tort, SettlementFundingDate, ChangeDate
into	#Case_SADates
from	#AllData


		--select * from #Case_SADates where changedate = 72.72
		--select * from #AllData where changedate is null
		

--3. Get a count of client ids that have that change date for the case
--drop table #Case_ClientCount

select	CD.*, count(AD.ClientId) as ClientCount
into	#Case_ClientCount
from	#AllData as AD
			LEFT OUTER JOIN #Case_SADates as CD on CD.CaseId=AD.CaseId and CD.ChangeDate=AD.ChangeDate
group by CD.CaseId, CD.CaseName, CD.ChangeDate, CD.Tort, CD.SettlementFundingDate


	--select * from	#Case_ClientCount
	--select sum(ClientCount) from #Case_ClientCount


--4. Determine if the change date was more than 6 months ago, 3-6 months, less than 3 months, or null
--drop table #temp

select	sub2.CaseId, sub2.CaseName, sub2.Tort, sub2.SettlementFundingDate, sub2.Time_Since_SA, sum(sub2.ClientCount) as TotalClients
--into #temp
from	(
		select	sub.*, 
					case 
						when sub.Months_Since_SA_Updated = 72 then 'Not Allocated'
						when sub.Months_Since_SA_Updated < 3 then 'Fewer than 3 months ago'
						when sub.Months_Since_SA_Updated > 6 then 'More than 6 months ago'
						when sub.Months_Since_SA_Updated >= 3 and sub.Months_Since_SA_Updated <= 6 then '3 to 6 months ago'
						else 'Look Into'
						end as [Time_Since_SA]
		from (
				select	*, 
						case
							when changedate = 72 then 72
							else DATEDIFF(month, ChangeDate, GETDATE()) 
							end as Months_Since_SA_Updated
				from	#Case_ClientCount
			) as sub

		) as sub2
group by sub2.CaseId, sub2.CaseName, sub2.Time_Since_SA, sub2.Tort, sub2.SettlementFundingDate
order by sub2.CaseId, sub2.Time_Since_SA

--select sum(TotalClients) from #temp 


END
